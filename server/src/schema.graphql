type Query{
    users:[User!]
    user(id:ID!):User
    getCompaniesForUser(userId:ID!):[Company!]

    companies:[Company!]
    company(id:ID!):Company
    getProjectsForCompany(companyId:ID!):[Project!]

    projects:[Project!]
    project(id:ID!):Project

    userStories:[UserStory!]
    userStory(id:ID!):UserStory

    tasks:[Task!]
    task(id:ID!):Task
    unFinishedTasks(userId:ID):[Task]
}

type Mutation{
    addNewUser(newFirstName:String!,newLastName:String!,email:String!,password:String!):User!
    addNewCompany(userId:Int!,CompanyName:String!):Company!
    addNewProject(userId:Int,companyId:Int!,projectName:String):Project!
    addNewUserStory(userId:Int,projectId:Int!,userStory:String):UserStory!
    addNewTask(userStoryId:Int!,taskTitle:String!,taskDescription:String,ownerId:Int):Task!

    addUserToCompany(userId:Int,companyId:Int):Int
    addOwnerToProject(userId:Int,projectId:Int):Int
    addOwnerToUserStory(userId:Int,userStoryId:Int):Int
    addOwnerToTask(userId:Int,taskId:Int):Int

    deleteProject(projectId:Int):Int
    deleteUserStory(userStoryId:Int):Int
    deleteTask(taskId:Int):Int

    updateUserStory(ownerId:Int,userStory:String,status:Boolean, userStoryId:Int):UserStory!
    updateTaskStatus(taskId:Int,taskStatus:Boolean):Boolean
    updateTask( taskId:Int, title:String, description: String,time:String):Task!

    estimateUserStory(userId:Int, userStoryId:Int, estimation:Int):Int

}

type User {
    id:Int!
    firstName:String!
    lastName:String!
    email:String!
    companies:[Company!]
    userStoryEstimations:[UserEstimation!]
}


type Company {
    id:Int
    name:String
    users:[User!]
    projects:[Project!]
}

type Project{
    id:Int,
    company:Company!,
    name:String,
    owner:User,
    participants:[User!],
    userStories:[UserStory!]
}

type UserStory{
    id:Int,
    userStory:String,
    project:Project,
    status:Boolean,
    businessValue:Int,
    owner:User,
    estimatedUsers:[UserEstimation!],
    tasks:[Task!]
}

type Task{
    id: Int,
    title:String,
    description:String,
    ready: Boolean,
    time: String,
    userStory: UserStory,
    owner: User
}

type UserEstimation{
    id:Int,
    estimation:Int,
    owner:User,
    userStory:UserStory,
}
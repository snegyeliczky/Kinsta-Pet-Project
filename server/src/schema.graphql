type Query{
    users:[User!]
    user(id:ID!):User
    getCompaniesForUser(userId:ID!):[Company!]

    companies:[Company!]
    company(id:ID!):Company
    getProjectsForCompany(companyId:ID!):[Project!]

    projects:[Project!]
    project(id:ID!):Project

    userStories:[UserStory!]
}

type Mutation{
    addUser(newFirstName:String!,newLastName:String!,email:String!,password:String!):User!
    addCompany(userId:Int,CompanyName:String!):Company!
    addUserToCompany(userId:Int,companyId:Int):Int
    addNewProject(userId:Int,companyId:Int,projectName:String):Project!

}

type User {
    id:Int!
    firstName:String!
    lastName:String!
    email:String!
    companies:[Company!]

    estimation:Int
}


type Company {
    id:Int
    name:String
    users:[User!]
    projects:[Project!]
}

type Project{
    id:Int,
    company:Company!,
    name:String,
    owner:User,
    participants:[User!],
}

type UserStory{
    id:Int,
    userStory:String,
    project:Project,
    status:Boolean,
    businessValue:Int,
    owner:User,
    estimatedUsers:[User!]
}